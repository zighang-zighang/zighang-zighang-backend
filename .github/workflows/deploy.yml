name: Deploy

on:
  push:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  develop-image-build:
    name: Develop - Image Build and Push to NCP Registry
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to NCP Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DEVELOP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DEVELOP_CONTAINER_REGISTRY }}/server:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  develop-deploy:
    name: Develop - Deploy to Server
    runs-on: ubuntu-latest
    needs: develop-image-build
    steps:
      - name: Execute
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DEVELOP_SSH_HOST }}
          username: ${{ secrets.DEVELOP_SSH_USER }}
          key: ${{ secrets.DEVELOP_SSH_KEY }}
          port: ${{ secrets.DEVELOP_SSH_PORT }}
          script: |
            echo ${{ secrets.NCP_SECRET_KEY }} | docker login --username ${{ secrets.NCP_ACCESS_KEY }} --password-stdin ${{ secrets.DEVELOP_CONTAINER_REGISTRY }}
            
            if [ $(docker ps -q -f name=server) ]; then
              docker stop server
              docker rm server
            fi

            docker pull ${{ secrets.DEVELOP_CONTAINER_REGISTRY }}/server:${{ github.sha }}
            docker run --name server --restart unless-stopped --env-file ${{ secrets.DEVELOP_ENV_FILE }} -p 8080:8080 -d ${{ secrets.DEVELOP_CONTAINER_REGISTRY }}/server:${{ github.sha }}
            docker image prune -f

  main-image-build:
    name: Main - Image Build and Push to NCP Registry
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to NCP Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.MAIN_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.MAIN_CONTAINER_REGISTRY }}/server:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  main-deploy:
    name: Main - Deploy to Server
    runs-on: ubuntu-latest
    needs: main-image-build
    steps:
      - name: Execute
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.MAIN_SSH_HOST }}
          username: ${{ secrets.MAIN_SSH_USER }}
          key: ${{ secrets.MAIN_SSH_KEY }}
          port: ${{ secrets.MAIN_SSH_PORT }}
          script: |
            echo ${{ secrets.NCP_SECRET_KEY }} | docker login --username ${{ secrets.NCP_ACCESS_KEY }} --password-stdin ${{ secrets.MAIN_CONTAINER_REGISTRY }}
            
            if [ $(docker ps -q -f name=server) ]; then
              docker stop server
              docker rm server
            fi

            docker pull ${{ secrets.MAIN_CONTAINER_REGISTRY }}/server:${{ github.sha }}
            docker run --name server --restart unless-stopped --env-file ${{ secrets.MAIN_ENV_FILE }} -p 8080:8080 -d ${{ secrets.MAIN_CONTAINER_REGISTRY }}/server:${{ github.sha }}
            docker image prune -f